/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.NhanVienDAO;
import POJO.clsFormatCol;
import POJO.clsNhanVien;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Admin
 */
public class frmNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form frmNhanVien
     */
    public frmNhanVien() {
        initComponents();
        btnTimKiem.setOpaque(false);
        btnTimKiem.setContentAreaFilled(false);
        
        btnThem.setOpaque(false);
        btnThem.setContentAreaFilled(false);
        
        btnXoa.setOpaque(false);
        btnXoa.setContentAreaFilled(false);
        
        btnSua.setOpaque(false);
        btnSua.setContentAreaFilled(false);
        
        btnLuu.setOpaque(false);
        btnLuu.setContentAreaFilled(false);
        
        this.setLocationRelativeTo(null);
        ArrayList<clsNhanVien> dsNV = NhanVienDAO.layDanhSachNhanVien();
        String []TieuDe = {"Mã nhân viên", "Tên nhân viên", "Ngày sinh","Giới tính", "Số điện thoại", "Địa chỉ", "Lương"};
        DefaultTableModel dtm = (DefaultTableModel)tblNhanVien.getModel();
        dtm.setColumnIdentifiers(TieuDe);
        dtm.setRowCount(0);
        for(clsNhanVien hh : dsNV)
        {
            Vector<Object> vec = new Vector<Object>();
            vec.add(hh.getMaNV());
            vec.add(hh.getTenNV());
            vec.add(hh.getNgaySinh());
            vec.add(hh.getGioiTinh());
            vec.add(hh.getSoDT());
            vec.add(hh.getDiaChi());
            vec.add(hh.getLuong());
            dtm.addRow(vec);
        }
        tblNhanVien.setModel(dtm);
        Enable(false);
        TableColumnModel columnModel = tblNhanVien.getColumnModel();
        columnModel.getColumn(6).setCellRenderer(new clsFormatCol());
        tblNhanVien.setDefaultEditor(Object.class, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnReset = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        txtKeyWord = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnPrint = new javax.swing.JButton();
        btnReset1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        txtTenNV = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtGioiTinh = new javax.swing.JTextField();
        txtLuong = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JFormattedTextField();
        btnQLTK = new javax.swing.JButton();

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_load.png"))); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnThem.setBackground(new java.awt.Color(204, 204, 204));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_them.png"))); // NOI18N
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel2.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        btnXoa.setBackground(new java.awt.Color(204, 204, 204));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_xoa.png"))); // NOI18N
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel2.add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        btnSua.setBackground(new java.awt.Color(204, 204, 204));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_sua.png"))); // NOI18N
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel2.add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_luu.png"))); // NOI18N
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        jPanel2.add(btnLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, 40));

        btnTimKiem.setBackground(new java.awt.Color(204, 204, 204));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_timkiem.png"))); // NOI18N
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel2.add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, -1, -1));
        jPanel2.add(txtKeyWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(466, 17, 175, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Tìm kiếm:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 16, -1, 23));

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_print.png"))); // NOI18N
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, -1, -1));

        btnReset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_load.png"))); // NOI18N
        btnReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnReset1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 192, 1000, -1));

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 254, 1000, 200));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin hàng hóa"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Mã nhân viên:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 41, 90, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tên nhân viên:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Ngày sinh:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 142, 90, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Giới tính:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 71, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Số điện thoại:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Địa chỉ:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Lương:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 140, 61, -1));
        jPanel1.add(txtMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 41, 229, -1));
        jPanel1.add(txtTenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 90, 229, -1));
        jPanel1.add(txtDiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, 250, -1));
        jPanel1.add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 250, -1));
        jPanel1.add(txtGioiTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 70, -1));
        jPanel1.add(txtLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, 110, -1));

        try {
            txtNgaySinh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtNgaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 142, 229, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 730, 180));

        btnQLTK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnQLTK.setText("Quản lý tài khoản");
        btnQLTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLTKActionPerformed(evt);
            }
        });
        getContentPane().add(btnQLTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, 200, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        Enable(true);
        btnThem.setEnabled(false);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int maNV = Integer.parseInt(txtMaNV.getText());
    
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Bạn có chắc chắn muốn xóa nhân viên có mã " + maNV + " không?", 
                "Xác nhận xóa", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            boolean result = NhanVienDAO.xoaNhanVien(maNV);

            if(result) {
                updateTable();
                JOptionPane.showMessageDialog(this, "Xóa thành công mã nhân viên " + maNV);
                Reset();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa không thành công mã nhân viên " + maNV);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        Enable(true);
        txtMaNV.setEnabled(false);
        btnSua.setEnabled(false);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
            try {
            String maNV = txtMaNV.getText();
            String ten = txtTenNV.getText();
            String ngay = txtNgaySinh.getText();
            String gioitinh = txtGioiTinh.getText();
            String diachi = txtDiaChi.getText();
            String sdt = txtSDT.getText();
            String luongNV = txtLuong.getText();
            

            // Kiểm tra các trường không được để trống
            if (maNV.isEmpty() || ten.isEmpty() || ngay.isEmpty() || gioitinh.isEmpty() || sdt.isEmpty() || diachi.isEmpty() || luongNV.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int ma = Integer.parseInt(txtMaNV.getText());
            int luong = Integer.parseInt(txtLuong.getText());
//            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//            Date ngaySinhDate = dateFormat.parse(ngay);
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            dateFormat.setLenient(false); // Không chấp nhận các giá trị ngày không hợp lệ

            Date ngaySinhDate = null;
            try {
                ngaySinhDate = dateFormat.parse(ngay);
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ! Vui lòng nhập ngày theo định dạng yyyy-MM-dd.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return; // Dừng lại nếu ngày sinh không hợp lệ
            }
            // Kiểm tra giá trị của lương
            if (luong <= 0) {
                JOptionPane.showMessageDialog(this, "Lương phải là một số dương!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(ngaySinhDate == null)
            {
                JOptionPane.showMessageDialog(this, "Ngày sinh không được bỏ trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            clsNhanVien nv = new clsNhanVien(ma, ten, ngaySinhDate, gioitinh, sdt, diachi, luong);

            if (txtMaNV.isEnabled()) { // Thêm mới nhân viên
                if (NhanVienDAO.themNhanVien(nv)) {
                    JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    Enable(false);
                    Reset();
                    btnThem.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm nhân viên không thành công!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            } else { // Cập nhật thông tin nhân viên
                if (NhanVienDAO.capNhatNhanVien(nv)) {
                    JOptionPane.showMessageDialog(this, "Cập nhật nhân viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    Enable(false);
                    Reset();
                    btnSua.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Cập nhật nhân viên không thành công!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            }
            updateTable();

        } catch (NumberFormatException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String key = txtKeyWord.getText();
        ArrayList<clsNhanVien> dsKQ = NhanVienDAO.timKiemNhanVienTheoTen(key);
        
        DefaultTableModel dtm = (DefaultTableModel)tblNhanVien.getModel();
        dtm.setRowCount(0);
        
        for(clsNhanVien nv : dsKQ)
        {
            Vector<Object> vec = new Vector<Object>();
            vec.add(nv.getMaNV());
            vec.add(nv.getTenNV());
            vec.add(nv.getNgaySinh());
            vec.add(nv.getGioiTinh());
            vec.add(nv.getSoDT());
            vec.add(nv.getDiaChi());
            vec.add(nv.getLuong());
            dtm.addRow(vec);
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        // TODO add your handling code here:
        int rowIndex = tblNhanVien.getSelectedRow();
        if (rowIndex >= 0) {
            int maNV = (int) tblNhanVien.getValueAt(rowIndex, 0);
            clsNhanVien nv = NhanVienDAO.layNhanVien(maNV);
            txtMaNV.setText(String.valueOf(nv.getMaNV()));
            txtTenNV.setText(nv.getTenNV());

            // Lấy ngày tháng từ đối tượng JDateChooser và đặt vào JDateChooser khác
            txtNgaySinh.setText(String.valueOf(nv.getNgaySinh()));

            txtGioiTinh.setText(nv.getGioiTinh());
            txtSDT.setText(nv.getSoDT());
            txtDiaChi.setText(nv.getDiaChi());
            txtLuong.setText(String.valueOf(nv.getLuong()));
        }
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        // Hiển thị hộp thoại lưu tệp
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Lưu tệp Excel");

        // Đặt bộ lọc tệp Excel
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Tệp Excel (*.xlsx)", "xlsx");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String filePath = fileToSave.getAbsolutePath();

            // Kiểm tra phần mở rộng của tệp
            String extension = "";

            int i = filePath.lastIndexOf('.');
            int p = Math.max(filePath.lastIndexOf('/'), filePath.lastIndexOf('\\'));

            if (i > p) {
                extension = filePath.substring(i + 1);
            }

            if (!extension.equalsIgnoreCase("xlsx")) {
                filePath += ".xlsx"; // Nếu không có phần mở rộng, thêm ".xlsx" vào cuối tên tệp
            }

            exportToExcel(tblNhanVien, filePath);
        }
    }//GEN-LAST:event_btnPrintActionPerformed
    public void exportToExcel(JTable table, String filePath) {
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Danh sách nhân viên");

            int rowCount = table.getRowCount();
            int columnCount = table.getColumnCount();

            XSSFRow headerRow = sheet.createRow(0);
            for (int j = 0; j < columnCount; j++) {
                headerRow.createCell(j).setCellValue(table.getColumnName(j));
            }

            for (int i = 0; i < rowCount; i++) {
                XSSFRow row = sheet.createRow(i + 1);
                for (int j = 0; j < columnCount; j++) {
                    row.createCell(j).setCellValue(String.valueOf(table.getValueAt(i, j)));
                }
            }

            // Thêm dòng tổng cộng số lượng nhân viên
            XSSFRow countRow = sheet.createRow(rowCount + 1);
            countRow.createCell(columnCount - 1).setCellValue("Tổng số nhân viên:");
            countRow.createCell(columnCount).setCellValue(rowCount);

            try (FileOutputStream outputStream = new FileOutputStream(filePath)) {
                workbook.write(outputStream);
            }

            System.out.println("Exported to Excel successfully.");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        Reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset1ActionPerformed
        // TODO add your handling code here:
        Reset();
    }//GEN-LAST:event_btnReset1ActionPerformed

    private void btnQLTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLTKActionPerformed
        // TODO add your handling code here:
        frmTaiKhoan tk = new frmTaiKhoan();
        tk.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnQLTKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnQLTK;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset1;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtKeyWord;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JFormattedTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
    private void Enable(boolean check)
    {
        txtMaNV.setEnabled(check);
        txtTenNV.setEnabled(check);
        txtGioiTinh.setEnabled(check);
        txtSDT.setEnabled(check);
        txtDiaChi.setEnabled(check);
        txtNgaySinh.setEnabled(check);
        txtLuong.setEnabled(check);
        btnLuu.setEnabled(check);
    }
    private void Reset() {
        txtMaNV.setText("");      
        txtTenNV.setText("");     
        txtNgaySinh.setText("");  
        txtGioiTinh.setText("");  
        txtSDT.setText("");       
        txtDiaChi.setText("");    
        txtLuong.setText("");     
    }
    private void updateTable()
    {
        ArrayList<clsNhanVien> dsNV = NhanVienDAO.layDanhSachNhanVien();
        DefaultTableModel dtm = (DefaultTableModel)tblNhanVien.getModel();
        
        dtm.setRowCount(0);
        for(clsNhanVien hh : dsNV)
        {
            Vector<Object> vec = new Vector<Object>();
            vec.add(hh.getMaNV());
            vec.add(hh.getTenNV());
            vec.add(hh.getNgaySinh());
            vec.add(hh.getGioiTinh());
            vec.add(hh.getSoDT());
            vec.add(hh.getDiaChi());
            vec.add(hh.getLuong());
            dtm.addRow(vec);
        }
    }
    
}
