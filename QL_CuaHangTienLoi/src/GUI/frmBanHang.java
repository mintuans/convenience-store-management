/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.HangHoaDAO;
import DAO.HoaDonDAO;
import DAO.KhachHangDAO;
import POJO.AprioriAlgorithm;
import POJO.ItemSet;
import POJO.Transaction;
import POJO.clsChiTietHoaDon;
import POJO.clsFormatCol;
import POJO.clsHangHoa;
import POJO.clsHienThiChiTiet;
import POJO.clsHoaDon;
import POJO.clsKhachHang;
import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.Vector;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 *
 * @author Admin
 */
public class frmBanHang extends javax.swing.JFrame {

    /**
     * Creates new form frmBanHang
     */
    public frmBanHang() {
        initComponents();
        // Tắt nền của nút
        btnTimKiem.setOpaque(false);
        btnTimKiem.setContentAreaFilled(false);
        this.setLocationRelativeTo(null);
        load_HangHoa();
        String []TieuDe = {"Mã hàng hóa", "Tên hàng hóa", "Đơn giá", "Số lượng", "Thành tiền"};
        DefaultTableModel dtm = (DefaultTableModel)tblHoaDon.getModel();
        dtm.setColumnIdentifiers(TieuDe);
        dtm.setRowCount(0);
        TableColumnModel columnModel = tblHangHoa.getColumnModel();
        columnModel.getColumn(4).setCellRenderer(new clsFormatCol());
        //columnModel.getColumn(6).setCellRenderer(new clsFormatCol());
        tblHangHoa.setDefaultEditor(Object.class, null);
        tblHoaDon.setDefaultEditor(Object.class, null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHangHoa = new javax.swing.JTable();
        txtKey = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnThanhToan = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtTenKh = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        btnXacNhan = new javax.swing.JButton();
        btnGoiY = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblHangHoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblHangHoa);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 610, 430));

        txtKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKeyActionPerformed(evt);
            }
        });
        jPanel1.add(txtKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 267, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Nhập từ khóa:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 100, -1));

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_timkiem.png"))); // NOI18N
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel1.add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 40, 40));

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_addproduct.png"))); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 50, 50, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("Danh sách hàng hóa");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 530));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_pay.png"))); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });
        jPanel3.add(btnThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 160, -1));

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_load.png"))); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel3.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 480, -1, -1));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 440, 230));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel2.setText("Thông tin đơn hàng ");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Mã khách hàng:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel5.setText("Tên khách hàng:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel6.setText("Số điện thoại:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, -1));
        jPanel2.add(txtMaKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 50, -1));
        jPanel2.add(txtTenKh, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 110, -1));

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        jPanel2.add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 120, -1));

        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });
        jPanel2.add(btnXacNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, -1, -1));

        btnGoiY.setText("Gợi ý!");
        btnGoiY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoiYActionPerformed(evt);
            }
        });
        jPanel2.add(btnGoiY, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 440, 140));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 0, 460, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKeyActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String key = txtKey.getText();
        ArrayList<clsHangHoa> dsKQ = HangHoaDAO.timKiemHangHoaTheoTen(key);
        
        DefaultTableModel dtm = (DefaultTableModel)tblHangHoa.getModel();
        dtm.setRowCount(0);
        
        for(clsHangHoa hh : dsKQ)
        {
            Vector<Object> vec = new Vector<Object>();
            vec.add(hh.getMaHang());
            vec.add(hh.getTenHangHoa());
            vec.add(hh.getMaLoaiHang());
            vec.add(hh.getDonViTinh());
            vec.add(hh.getDonGia());
            vec.add(hh.getSoLuongTon());
            vec.add(hh.getGiaNhap());
            dtm.addRow(vec);
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        addOrUpdateItemToHoaDon();
        removeEmptyRowsFromHoaDon();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        resetHoaDon();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        int rowCount = model.getRowCount();

        // Kiểm tra xem bảng tblHoaDon có hàng hóa nào không
        if (rowCount == 0) {
            JOptionPane.showMessageDialog(this, "Không có hàng hóa để thanh toán!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Date ngayMua = new Date();
        int maNhanVien = 1; 
        int tongTien = tinhTongTien();
        // Kiểm tra dữ liệu nhập vào txtMaKH
        String maKHString = txtMaKH.getText().trim();
        if (maKHString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã khách hàng!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int maKH = Integer.parseInt(maKHString);
        clsHoaDon hoaDon = new clsHoaDon(ngayMua, maNhanVien, tongTien, maKH);

        if (HoaDonDAO.themHoaDon(hoaDon)) {
            JOptionPane.showMessageDialog(this, "Thêm hóa đơn thành công!");
            load_HangHoa();
            int maHoaDonMoi = HoaDonDAO.layMaHoaDonMoi();

            for (int i = 0; i < rowCount; i++) {
                int maHangHoa = Integer.parseInt(model.getValueAt(i, 0).toString());
                int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());
                int donGia = Integer.parseInt(model.getValueAt(i, 2).toString());

                clsChiTietHoaDon chiTietHoaDon = new clsChiTietHoaDon(maHoaDonMoi, maHangHoa, soLuong, donGia);

                if (HoaDonDAO.themChiTietHoaDon(chiTietHoaDon)) {
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm chi tiết hóa đơn thất bại!");
                }
            }

            // Xóa dữ liệu trong bảng tblHoaDon sau khi đã thêm thành công
            model.setRowCount(0);
        } else {
            JOptionPane.showMessageDialog(this, "Thêm hóa đơn thất bại!");
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        String soDienThoai = txtSDT.getText().trim();
        clsKhachHang khachHang = KhachHangDAO.timKhachHangTheoSoDT(soDienThoai);

        if (khachHang != null) {
            txtMaKH.setText(String.valueOf(khachHang.getMaKH()));
            txtTenKh.setText(khachHang.getTenKH());
            txtSDT.setText(khachHang.getSoDT());
        } else {
            int response = JOptionPane.showConfirmDialog(this, "Số điện thoại không tồn tại. Bạn có muốn thêm khách hàng mới không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                String tenKhachHang = JOptionPane.showInputDialog(this, "Nhập tên khách hàng:");
                if (tenKhachHang != null && !tenKhachHang.trim().isEmpty()) {
                    clsKhachHang newKhachHang = new clsKhachHang();
                    newKhachHang.setTenKH(tenKhachHang);
                    newKhachHang.setSoDT(soDienThoai);
                    boolean success = KhachHangDAO.themKhachHang(newKhachHang);
                    if (success) {
                        JOptionPane.showMessageDialog(this, "Thêm khách hàng mới thành công.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Thêm khách hàng mới thất bại.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Tên khách hàng không được để trống.");
                }
            }
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnGoiYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoiYActionPerformed
        // TODO add your handling code here:
        List<Transaction> transactions = getAllTransactions();

        double minSupport = 0.5; 

        List<ItemSet> frequentItemSets = runAprioriAlgorithm(transactions, minSupport);

        displayFrequentItemSets(frequentItemSets);
    }//GEN-LAST:event_btnGoiYActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBanHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnGoiY;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblHangHoa;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtKey;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKh;
    // End of variables declaration//GEN-END:variables
    public void load_HangHoa()
    {
        
        String []TieuDe = {"Mã hàng hóa","Tên hàng hóa", "Loại hàng", "Đơn vị tính", "Đơn giá", "Số lượng tồn"};
        DefaultTableModel dtm = (DefaultTableModel)tblHangHoa.getModel();
        dtm.setColumnIdentifiers(TieuDe);
        dtm.setRowCount(0);
        ArrayList<clsHangHoa> dsHH = HangHoaDAO.layDanhSachHangHoa();
        for(clsHangHoa hh : dsHH)
        {
            Vector<Object> vec = new Vector<Object>();
            vec.add(hh.getMaHang());
            vec.add(hh.getTenHangHoa());
            vec.add(hh.getMaLoaiHang());
            vec.add(hh.getDonViTinh());
            vec.add(hh.getDonGia());
            vec.add(hh.getSoLuongTon());
//            vec.add(hh.getGiaNhap());
//            vec.add(hh.getHinhAnh());
            dtm.addRow(vec);
        }
        tblHangHoa.setModel(dtm);
    }
    private void removeEmptyRowsFromHoaDon() {
        DefaultTableModel modelHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        for (int i = modelHoaDon.getRowCount() - 1; i >= 0; i--) {
            boolean isEmpty = true;
            for (int j = 0; j < modelHoaDon.getColumnCount(); j++) {
                if (modelHoaDon.getValueAt(i, j) != null && !modelHoaDon.getValueAt(i, j).toString().isEmpty()) {
                    isEmpty = false;
                    break;
                }
            }
            if (isEmpty) {
                modelHoaDon.removeRow(i);
            }
        }
    }

    private void addOrUpdateItemToHoaDon() {
        int selectedRow = tblHangHoa.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel modelHangHoa = (DefaultTableModel) tblHangHoa.getModel();
            String maHangHoa = modelHangHoa.getValueAt(selectedRow, 0).toString();
            String tenHangHoa = modelHangHoa.getValueAt(selectedRow, 1).toString();
            int donGia = Integer.parseInt(modelHangHoa.getValueAt(selectedRow, 4).toString());

            DefaultTableModel modelHoaDon = (DefaultTableModel) tblHoaDon.getModel();
            boolean itemExists = false;

            for (int i = 0; i < modelHoaDon.getRowCount(); i++) {
                String existingMaHangHoa = modelHoaDon.getValueAt(i, 0).toString();
                if (existingMaHangHoa.equals(maHangHoa)) {
                    int existingSoLuong = (int) modelHoaDon.getValueAt(i, 3);
                    existingSoLuong += 1;
                    int existingThanhTien = donGia * existingSoLuong;

                    modelHoaDon.setValueAt(existingSoLuong, i, 3);
                    modelHoaDon.setValueAt(existingThanhTien, i, 4);

                    itemExists = true;
                    break;
                }
            }

            if (!itemExists) {
                int soLuong = 1;
                int thanhTien = donGia * soLuong;

                Vector<Object> v = new Vector<Object>();
                v.add(maHangHoa);
                v.add(tenHangHoa);
                v.add(donGia);
                v.add(soLuong);
                v.add(thanhTien);
                modelHoaDon.addRow(v);
            }
        }
    }
    private void resetHoaDon() {
        DefaultTableModel modelHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        modelHoaDon.setRowCount(0);
        txtMaKH.setText("");
        txtSDT.setText("");
        txtTenKh.setText("");
    }
    private int tinhTongTien()
    {
        int tongTien = 0;
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            int donGia = Integer.parseInt(model.getValueAt(i, 2).toString()); 
            int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString()); 
            tongTien += donGia * soLuong; 
        }
        return tongTien;
    }
    private List<Transaction> getAllTransactions() {
        List<clsHoaDon> allHoaDons = HoaDonDAO.layDanhSachHoaDon();
        List<Transaction> transactions = new ArrayList<>();

        for (clsHoaDon hoaDon : allHoaDons) {
            List<clsChiTietHoaDon> chiTietHoaDons = HoaDonDAO.layDanhSachChiTietHoaDon(hoaDon.getMaHD());

            // Chuyển đổi từ clsHienThiChiTiet sang clsChiTietHoaDon nếu cần thiết
            List<clsChiTietHoaDon> convertedChiTietHoaDons = new ArrayList<>();
            for (clsChiTietHoaDon cthd : chiTietHoaDons) {
                clsChiTietHoaDon convertedCTHD = new clsChiTietHoaDon(cthd.getMaHD(), cthd.getMaHang(), cthd.getSoLuong(), cthd.getDonGia());
                convertedChiTietHoaDons.add(convertedCTHD);
            }

            Set<Integer> items = convertedChiTietHoaDons.stream()
                .map(clsChiTietHoaDon::getMaHang)
                .collect(Collectors.toSet());

            transactions.add(new Transaction(new ArrayList<>(items)));
        }

        return transactions;
    }


    private List<ItemSet> runAprioriAlgorithm(List<Transaction> transactions, double minSupport) {
        AprioriAlgorithm aprioriAlgorithm = new AprioriAlgorithm(transactions, minSupport);
        return aprioriAlgorithm.findFrequentItemSets();
    }
    private void displayFrequentItemSets(List<ItemSet> frequentItemSets) {
        StringBuilder message = new StringBuilder();
        message.append("Các mẫu phổ biến:\n\n");

        for (ItemSet itemSet : frequentItemSets) {
            List<Integer> items = itemSet.getItems();
            String itemSetString = items.stream()
                .map(Object::toString)
                .collect(Collectors.joining(", "));

            int support = (int) itemSet.getSupport();

            message.append("Mẫu: ").append(itemSetString).append("\n");
            message.append("Hỗ trợ: ").append(support).append("\n\n");
        }
        JOptionPane.showMessageDialog(null, message.toString(), "Mẫu phổ biến", JOptionPane.INFORMATION_MESSAGE);
    }

}
